# Gossip plugin template config

# how often message headers are broadcasted
deeco.sendHD.period=${hdPeriod}
# how often outdated messages are checked an pull request is sent
deeco.sendPL.period=${plPeriod}
# how often local knowledge is broadcasted
deeco.sendKN.period=${knPeriod}

deeco.sendKN.range.from=1
deeco.sendKN.range.to=401
deeco.sendKN.count=${publishCount}

# probability of knowledge rebroadcast
deeco.gossipRebroadcast.probability=${probability}

# After this time knowledge is considered to be locally outdated
# and can be pulled.
deeco.receptionBuffer.localTimeout=${localTimeout}
# After this time knowledge is considered to be globally outdated
# and can be removed from buffers.
deeco.receptionBuffer.globalTimeout=${globalTimeout}

# list of used simulators
deeco.sim.simulators=matsim;omnet

# type of request buffer logger - enter "console" for console log
# or absolute or relative path to log file
deeco.requestLogger.out=${logFile}

deeco.matsim.config=${currentDir}config/matsim/berlin/config.xml
deeco.omnet.config=${currentDir}config/omnet/omnetpp.ini

# broadcast,multicast,omnet
deeco.sim.devices=${devices}
# list of enabled gossip features (plugins)
deeco.sim.features=${features}
# list of ensembles deployed on each node
deeco.sim.ensembles=${ensembles}

# simulation duration in milliseconds
deeco.sim.duration=${duration}
deeco.sim.run=${run}

deeco.grouper.count=${grouperCount}
